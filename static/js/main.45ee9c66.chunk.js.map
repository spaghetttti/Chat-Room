{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","analytics","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","name","displayName","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","console","log","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","disabled","props","messageClass","src","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAWAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,6CACPC,cAAe,iBAGjB,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YACTV,IAASW,YAiB3B,SAASC,IAMP,OACE,sBAAKC,UAAU,UAAf,UACE,sDACA,wBAAQA,UAAU,UAAUC,QARP,WACvB,IAAMC,EAAW,IAAIf,IAASS,KAAKO,mBACnCP,EAAKQ,gBAAgBF,IAMnB,iCAGA,mHAQN,SAASG,IACP,OACET,EAAKU,aACH,wBAAQN,UAAU,WAAWC,QAAS,kBAAML,EAAKW,WAAjD,sBAON,SAASC,IACP,IAAMC,EAAQC,mBACRC,EAAcd,EAAUe,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAHnC,EAKCC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EALW,sBAOgBC,mBAAS,IAPzB,mBAOXC,EAPW,KAOAC,EAPA,KASZC,EAAW,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DAClBD,EAAEE,iBAEEC,EAAO9B,EAAKU,YAAYqB,YAHV,EAIQ/B,EAAKU,YAAvBsB,EAJU,EAIVA,IAAKC,EAJK,EAILA,SAJK,SAKZlB,EAAYmB,IAAI,CACpBC,KAAMX,EACNY,UAAW7C,IAASU,UAAUoC,WAAWC,kBACzCN,MACAC,WACAH,SAVgB,OAalBL,EAAa,IACbZ,EAAM0B,QAAQC,eAAe,CAAEC,SAAU,WAEzCC,QAAQC,IAAI,WAAYrB,GAhBN,2CAAH,sDAmBjB,OACE,qCACE,iCACGA,GACCA,EAASsB,KAAI,SAACC,GAAD,OAAS,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAE9C,sBAAMC,IAAKpC,OAGb,uBAAMqC,SAAUxB,EAAhB,UACE,uBACEyB,MAAO3B,EACP4B,SAAU,SAACzB,GAAD,OAAOF,EAAaE,EAAE0B,OAAOF,QACvCG,YAAY,8BAGd,wBAAQlD,UAAU,UAAUmD,KAAK,SAASC,UAAWhC,EAArD,wBAQR,SAASsB,EAAYW,GAAQ,IAAD,EACYA,EAAMV,QAApCZ,EADkB,EAClBA,KAAMH,EADY,EACZA,IAAKC,EADO,EACPA,SAAUH,EADH,EACGA,KAC7BY,QAAQC,IAAI,SAAUc,EAAMV,SAC5B,IAAMW,EAAe1B,IAAQhC,EAAKU,YAAYsB,IAAM,OAAS,WAE7D,OACE,mCACE,sBAAK5B,UAAS,kBAAasD,GAA3B,UACE,qBAAKtD,UAAU,OAAf,SAAuB0B,IACvB,sBAAK1B,UAAU,UAAf,UACE,qBACEuD,IACE1B,GACA,0DAGJ,4BAAIE,YAOCyB,MAxHf,WAAgB,IAAD,EACEC,YAAa7D,GAArB8D,EADM,oBAGb,OACE,sBAAK1D,UAAU,MAAf,UACE,mCACE,8CACA,cAACK,EAAD,OAGF,kCAAUqD,EAAO,cAAClD,EAAD,IAAe,cAACT,EAAD,UCvBvB4D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.45ee9c66.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"./App.css\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCCexzzcgPkcS_Z-WNdIEyZA3nI7Uex8s4\",\n  authDomain: \"chat-room-f89f3.firebaseapp.com\",\n  projectId: \"chat-room-f89f3\",\n  storageBucket: \"chat-room-f89f3.appspot.com\",\n  messagingSenderId: \"912817704759\",\n  appId: \"1:912817704759:web:a9b76da1963ca09 c4e14b2\",\n  measurementId: \"G-5M4V46Z70S\",\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>ðŸ’¬</h1>\n        <SignOut />\n      </header>\n\n      <section>{user ? <ChatRoom /> : <SignIn />}</section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"welcome\">\n      <h1>Welcome to Chat Room</h1>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>\n        Sign in with Google\n      </button>\n      <p>\n        Please do not violate the community guidelines or you will be banned,\n        thank you\n      </p>\n    </div>\n  );\n}\n\nfunction SignOut() {\n  return (\n    auth.currentUser && (\n      <button className=\"sign-out\" onClick={() => auth.signOut()}>\n        Sign Out\n      </button>\n    )\n  );\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection(\"messages\");\n  const query = messagesRef.orderBy(\"createdAt\").limit(25);\n\n  const [messages] = useCollectionData(query, { idField: \"id\" });\n\n  const [formValue, setFormValue] = useState(\"\");\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    let name = auth.currentUser.displayName;\n    const { uid, photoURL } = auth.currentUser;\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n      name,\n    });\n\n    setFormValue(\"\");\n    dummy.current.scrollIntoView({ behavior: \"smooth\" });\n\n    console.log(\"shheshh:\", messages);\n  };\n\n  return (\n    <>\n      <main>\n        {messages &&\n          messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\n\n        <span ref={dummy}></span>\n      </main>\n\n      <form onSubmit={sendMessage}>\n        <input\n          value={formValue}\n          onChange={(e) => setFormValue(e.target.value)}\n          placeholder=\"Type your message here...\"\n        />\n\n        <button className='sign-in' type=\"submit\" disabled={!formValue}>\n          Send\n        </button>\n      </form>\n    </>\n  );\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL, name } = props.message;\n  console.log(\"shhesh\", props.message);\n  const messageClass = uid === auth.currentUser.uid ? \"sent\" : \"received\";\n\n  return (\n    <>\n      <div className={`message ${messageClass}`}>\n        <div className=\"name\">{name}</div>\n        <div className=\"img-txt\">\n          <img\n            src={\n              photoURL ||\n              \"https://api.adorable.io/avatars/23/abott@adorable.png\"\n            }\n          />\n          <p>{text}</p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}